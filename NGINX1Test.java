// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class NGINX1Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() throws MalformedURLException {
    driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.chrome());
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }
  @Test
  public void nGINX1() {
    driver.get("https://nginx.org/en/");
    driver.manage().window().setSize(new Dimension(1073, 824));
    driver.findElement(By.linkText("Basic HTTP server features")).click();
    driver.findElement(By.linkText("index")).click();
    driver.findElement(By.linkText("Example Configuration")).click();
    driver.findElement(By.linkText("Example Configuration")).click();
    driver.findElement(By.linkText("index")).click();
    driver.findElement(By.linkText("news")).click();
    driver.findElement(By.linkText("русский")).click();
    driver.findElement(By.cssSelector("#menu > div")).click();
    driver.findElement(By.linkText("english")).click();
    driver.findElement(By.linkText("documentation")).click();
    driver.findElement(By.linkText("Installing nginx")).click();
    driver.findElement(By.linkText("documentation")).click();
    driver.findElement(By.linkText("Building nginx from Sources")).click();
    driver.findElement(By.linkText("documentation")).click();
    driver.findElement(By.linkText("Beginner’s Guide")).click();
    driver.findElement(By.linkText("documentation")).click();
    driver.findElement(By.linkText("Admin’s Guide")).click();
    {
      WebElement element = driver.findElement(By.linkText("Installing NGINX and NGINX Plus"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.linkText("Load Balancer")).click();
    driver.findElement(By.linkText("HTTP Load Balancing")).click();
    vars.put("window_handles", driver.getWindowHandles());
    driver.findElement(By.linkText("About F5 NGINX")).click();
    vars.put("win5808", waitForWindow(2000));
    vars.put("root", driver.getWindowHandle());
    driver.switchTo().window(vars.get("win5808").toString());
    driver.close();
    driver.switchTo().window(vars.get("root").toString());
    driver.findElement(By.linkText("Home")).click();
    driver.findElement(By.cssSelector(".container-fluid:nth-child(3) > #nginx-products .col-xs-12:nth-child(5) .card-title")).click();
    driver.findElement(By.linkText("Configuration")).click();
    driver.findElement(By.linkText("Global Configuration")).click();
    driver.findElement(By.linkText("ConfigMap Resource")).click();
    vars.put("window_handles", driver.getWindowHandles());
    driver.findElement(By.linkText("worker_cpu_affinity")).click();
    vars.put("win1569", waitForWindow(2000));
    driver.switchTo().window(vars.get("win1569").toString());
    driver.close();
    driver.switchTo().window(vars.get("root").toString());
    driver.findElement(By.linkText("NGINX Ingress Controller")).click();
    driver.findElement(By.linkText("Troubleshooting")).click();
    driver.findElement(By.linkText("Troubleshooting VirtualServer Resources")).click();
    driver.findElement(By.cssSelector(".breadcrumb > li:nth-child(2)")).click();
    driver.findElement(By.linkText("NGINX Ingress Controller")).click();
    driver.findElement(By.cssSelector(".col-md-5:nth-child(5) > .card-body")).click();
    driver.findElement(By.linkText("Logging And Monitoring")).click();
    driver.findElement(By.linkText("Prometheus")).click();
    driver.findElement(By.linkText("Status Page")).click();
    driver.findElement(By.linkText("Logging")).click();
    driver.findElement(By.linkText("Home")).click();
  }
}
